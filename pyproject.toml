[tool.poetry]
name = "balance-hub"
version = "0.1.0"
description = "Async REST API for accounts and payments"
authors = ["Andrey Zherdetskiy <aszherdetskiy@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "app" }]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
fastapi = "^0.116.1"
uvicorn = {extras = ["standard"], version = "^0.35.0"}
sqlalchemy = {extras = ["asyncio"], version = "^2.0.42"}
asyncpg = "^0.30.0"
alembic = "^1.16.4"
pydantic = "^2.11.7"
pydantic-settings = "^2.10.1"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
bcrypt = "==4.0.1"
python-jose = {extras = ["cryptography"], version = "^3.5.0"}
python-multipart = "^0.0.20"
psycopg2-binary = "^2.9.10"
email-validator = "^2.2.0"


[tool.poetry.group.dev.dependencies]
black = "^25.1.0"
isort = "^6.0.1"
flake8 = "^7.3.0"
flake8-quotes = "^3.4.0"
ruff = "^0.12.8"
pre-commit = "^4.2.0"
pytest = "^8.3.3"
pytest-asyncio = "^0.25.2"
pytest-cov = "^5.0.0"
httpx = {version = "^0.27.2", extras = ["http2"]}
aiosqlite = "^0.20.0"
docker = "^7.0.0"
pytest-postgresql = "^6.1.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 99
skip-string-normalization = true

[tool.isort]
profile = "black"
line_length = 99
multi_line_output = 3
include_trailing_comma = false
force_single_line = false
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 99
extend-ignore = ["E203"]

[tool.ruff]
line-length = 99
target-version = "py310"
exclude = [
  "alembic/*",
  "tests/*",
  "scripts/*",
]

[tool.ruff.lint]
select = ["E", "F", "I", "Q", "D"]
ignore = ["E203", "D100", "D103", "D106", "D415", "D417"]

[tool.ruff.lint.isort]
known-first-party = ["app"]
force-single-line = false
lines-after-imports = 2
split-on-trailing-comma = false

[tool.ruff.format]
quote-style = "single"
docstring-code-format = true
skip-magic-trailing-comma = false

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"
multiline-quotes = "double"
docstring-quotes = "double"

[tool.pytest.ini_options]
addopts = "-q --cov=app --cov-report=term-missing --cov-fail-under=90"
asyncio_mode = "auto"
testpaths = [
  "tests",
]
markers = [
  "slow: marks tests as slow (deselect with '-m \"not slow\"')",
  "stress: marks tests as stress tests (deselect with '-m \"not stress\"')",
  "postgresql: marks tests as PostgreSQL specific tests",
]
